version: '3.7'

services:
  # api:
  #   build: ./
  #   container_name: ${DOCKER_APP_NAME_PREFIX}-backend
  #   restart: always
  #   depends_on:
  #     - mongoDB
  #   networks:
  #     - webnet
  #   ports:
  #     - '${DOCKER_APP_PORT_PREFIX}00:3005'
  # mongoDB:
  #   container_name: ${DOCKER_APP_NAME_PREFIX}-mongodb
  #   restart: always
  #   image: mongo:4.4.18
  #   networks:
  #     - webnet
  #   ports:
  #     - '${DOCKER_APP_PORT_PREFIX}01:27017'
  #   volumes:
  #     - mongodata:/data/db
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: '${DATABASE_USER}'
  #     MONGO_INITDB_ROOT_PASSWORD: '${DATABASE_PASSWORD}'
  #   # command: --bind_ip_all
  # mongo-express:
  #   image: mongo-express
  #   container_name: ${DOCKER_APP_NAME_PREFIX}-mongodb-express
  #   restart: always
  #   depends_on:
  #     - mongoDB
  #   ports:
  #     - '${DOCKER_APP_PORT_PREFIX}04:8081'
  #   networks:
  #     - webnet
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: '${DATABASE_USER}'
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: '${DATABASE_PASSWORD}'
  #     ME_CONFIG_MONGODB_URL: mongodb://${DATABASE_USER}:${DATABASE_PASSWORD}@mongodb:27017/
  #     ME_CONFIG_MONGODB_ENABLE_ADMIN: 'true'
  #     ME_CONFIG_BASICAUTH: 'true'
  #     ME_CONFIG_BASICAUTH_USERNAME: 'admin'
  #     ME_CONFIG_BASICAUTH_PASSWORD: '${DATABASE_UI_PASSWORD}'

  # redis-stack:
  #   image: redis/redis-stack:latest
  #   container_name: ${DOCKER_APP_NAME_PREFIX}-redis-stack
  #   ports:
  #     - "${DOCKER_APP_PORT_PREFIX}06:8001"   # Keep your existing port mapping
  #     - 6379:6379

  #   networks:
  #     - webnet
  #   volumes:
  #     - app-redis-data:/data
  #     - ./redis.conf:/redis-stack.conf
  #   restart: unless-stopped
  
  redis:
    image: redis:latest
    container_name: ${DOCKER_APP_NAME_PREFIX}-redis
    ports:
      - 6379:6379
    networks:
      - webnet
    volumes:
      - app-redis-data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf  # Redis configuratione
    restart: unless-stopped
    # command: ["redis-server", "/usr/local/etc/redis/redis.conf"] 

  # nginx-proxy-manager:
  #   image: 'jc21/nginx-proxy-manager:latest'
  #   restart: unless-stopped
  #   volumes:
  #     - nginxproxymanagerdata:/data
  #     - letsencrypt:/etc/letsencrypt

networks:
  webnet:
    driver: bridge

volumes:
  mongodata:
  nginxproxymanagerdata:
  letsencrypt:
  app-redis-data:
